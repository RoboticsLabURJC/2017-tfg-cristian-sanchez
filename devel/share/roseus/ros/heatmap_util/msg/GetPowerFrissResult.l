;; Auto-generated. Do not edit!


(when (boundp 'heatmap_util::GetPowerFrissResult)
  (if (not (find-package "HEATMAP_UTIL"))
    (make-package "HEATMAP_UTIL"))
  (shadow 'GetPowerFrissResult (find-package "HEATMAP_UTIL")))
(unless (find-package "HEATMAP_UTIL::GETPOWERFRISSRESULT")
  (make-package "HEATMAP_UTIL::GETPOWERFRISSRESULT"))

(in-package "ROS")
;;//! \htmlinclude GetPowerFrissResult.msg.html


(defclass heatmap_util::GetPowerFrissResult
  :super ros::object
  :slots (_data _size _source_coords ))

(defmethod heatmap_util::GetPowerFrissResult
  (:init
   (&key
    ((:data __data) 0.0)
    ((:size __size) 0)
    ((:source_coords __source_coords) (make-array 0 :initial-element 0 :element-type :integer))
    )
   (send-super :init)
   (setq _data (float __data))
   (setq _size (round __size))
   (setq _source_coords __source_coords)
   self)
  (:data
   (&optional __data)
   (if __data (setq _data __data)) _data)
  (:size
   (&optional __size)
   (if __size (setq _size __size)) _size)
  (:source_coords
   (&optional __source_coords)
   (if __source_coords (setq _source_coords __source_coords)) _source_coords)
  (:serialization-length
   ()
   (+
    ;; float64 _data
    8
    ;; int16 _size
    2
    ;; int16[] _source_coords
    (* 2    (length _source_coords)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _data
       (sys::poke _data (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; int16 _size
       (write-word _size s)
     ;; int16[] _source_coords
     (write-long (length _source_coords) s)
     (dotimes (i (length _source_coords))
       (write-word (elt _source_coords i) s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _data
     (setq _data (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; int16 _size
     (setq _size (sys::peek buf ptr- :short)) (incf ptr- 2)
   ;; int16[] _source_coords
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _source_coords (instantiate integer-vector n))
     (dotimes (i n)
     (setf (elt _source_coords i) (sys::peek buf ptr- :short)) (incf ptr- 2)
     ))
   ;;
   self)
  )

(setf (get heatmap_util::GetPowerFrissResult :md5sum-) "8a3f44e19130d36ab5f37e91f8827dfc")
(setf (get heatmap_util::GetPowerFrissResult :datatype-) "heatmap_util/GetPowerFrissResult")
(setf (get heatmap_util::GetPowerFrissResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float64 data
int16 size
int16[] source_coords

")



(provide :heatmap_util/GetPowerFrissResult "8a3f44e19130d36ab5f37e91f8827dfc")


