// Auto-generated. Do not edit!

// (in-package heatmap_util.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class RvizFrissGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.origin = null;
      this.heatmap_config = null;
    }
    else {
      if (initObj.hasOwnProperty('origin')) {
        this.origin = initObj.origin
      }
      else {
        this.origin = [];
      }
      if (initObj.hasOwnProperty('heatmap_config')) {
        this.heatmap_config = initObj.heatmap_config
      }
      else {
        this.heatmap_config = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type RvizFrissGoal
    // Serialize message field [origin]
    bufferOffset = _arraySerializer.int16(obj.origin, buffer, bufferOffset, null);
    // Serialize message field [heatmap_config]
    bufferOffset = _arraySerializer.float64(obj.heatmap_config, buffer, bufferOffset, null);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type RvizFrissGoal
    let len;
    let data = new RvizFrissGoal(null);
    // Deserialize message field [origin]
    data.origin = _arrayDeserializer.int16(buffer, bufferOffset, null)
    // Deserialize message field [heatmap_config]
    data.heatmap_config = _arrayDeserializer.float64(buffer, bufferOffset, null)
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += 2 * object.origin.length;
    length += 8 * object.heatmap_config.length;
    return length + 8;
  }

  static datatype() {
    // Returns string type for a message object
    return 'heatmap_util/RvizFrissGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '01a81ba5d3520aaf0596aa1fa2695ac0';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    int16[] origin
    float64[] heatmap_config
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new RvizFrissGoal(null);
    if (msg.origin !== undefined) {
      resolved.origin = msg.origin;
    }
    else {
      resolved.origin = []
    }

    if (msg.heatmap_config !== undefined) {
      resolved.heatmap_config = msg.heatmap_config;
    }
    else {
      resolved.heatmap_config = []
    }

    return resolved;
    }
};

module.exports = RvizFrissGoal;
